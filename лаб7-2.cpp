/*Recur9. Описать рекурсивную функцию GCD(A, B) целого типа,
находящую наибольший общий делитель (НОД, greatest common divisor) двух целых
положительных чисел A и B, используя алгоритм Евклида:
НОД(A, B) = НОД(B, A mod B),    B ≠ 0;        НОД(A, 0) = A,
где «mod» обозначает операцию взятия остатка от деления. С помощью этой функции
найти НОД(A, B), НОД(A, C), НОД(A, D), если даны числа A, B, C, D */

#include <iostream>

using namespace std;

int GCD(int a, int b)
{
	if (b == 0)
		return a;
	return (b, a % b);
}

int main()
{
	setlocale(LC_ALL, "rus");
	int a, b, c, d;
	cin >> a >> b >> c >> d;
	cout << "Наибольший общий делитель чисел " << a << " и " << b << " - " << GCD(a, b) << endl;
	cout << "Наибольший общий делитель чисел " << a << " и " << c << " - " << GCD(a, c) << endl;
	cout << "Наибольший общий делитель чисел " << a << " и " << d << " - " << GCD(a, d) << endl;
}

/*
24
18
48
20
Наибольший общий делитель чисел 24 и 18 - 6
Наибольший общий делитель чисел 24 и 48 - 24
Наибольший общий делитель чисел 24 и 20 - 4
*/
