/*Recur5°.Описать рекурсивную функцию Fib2(N) целого типа, вычисляющую N - й элемент последовательности чисел Фибоначчи(N — целое число) :

   F1 = F2 = 1, FK = FK−2 + FK−1, K = 3, 4, … .

   Считать, что номер N не превосходит 20. Для уменьшения количества рекурсивных вызовов по сравнению 
   с функцией Fib1(см.задание Recur4) создать вспомогательный массив для хранения уже вычисленных 
   чисел Фибоначчи и обращаться к нему при выполнении функции Fib2.С помощью функции Fib2 найти пять чисел Фибоначчи с данными номерами.*/

#include <iostream>

using namespace std;

int fib(int N)
{
    int f1 = 1;
    int f2 = 1;
    int a=0;
    if (N == 1)
        return f1;
    if (N == 2)
        return f2;
    else
    {
        N -= 2;
        while (N > 0)
        {
            a = f2;
            f2 = f1 + f2;
            f1 = a;
            N -= 1;
        }
        return f2;
    }
    
}

int main()
{
    int c = 5;
    int N;
    while (c > 0)
    {
        cin >> N;
        cout << fib(N) << endl << endl;
        c -= 1;
    }
}

/*
1
1

2
1

3
2

4
3

5
5
*/